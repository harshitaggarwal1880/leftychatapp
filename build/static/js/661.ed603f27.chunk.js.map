{"version":3,"file":"static/js/661.ed603f27.chunk.js","mappings":"oPAmIMA,EAAkBC,EAAAA,GAAAA,IAAU,6mFAsHlC,UA/OkB,WAChB,IAEMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAG,eAAnCC,EAAO,KAAEC,EAAU,KAC1B,GAAkCF,EAAAA,EAAAA,WAAS,GAAK,eAAzCG,EAAS,KAAEC,EAAY,KAC9B,GAA4CJ,EAAAA,EAAAA,eAASK,GAAU,eAAxDC,EAAc,KAAEC,EAAiB,KAElCC,EAAe,CACnBC,SAAU,eACVC,UAAW,IACXC,cAAc,EACdC,WAAW,EACXC,MAAO,SAITC,EAAAA,EAAAA,YAAU,WAEJC,aAAaC,QAAQ,kBACvBlB,EAAS,SAGb,GAAG,IAGH,IAAMmB,EAAiB,yCAAG,qGACDZ,IAAnBC,EAA4B,gBAC9BY,EAAAA,GAAAA,MAAY,0BAA2BV,GAAc,uCAGlCW,KAAKC,MAAML,aAAaC,QAAQ,kBAAkB,KAAD,EAEnD,OAFXK,EAAI,OAEVC,QAAQC,IAAIF,GAAK,UAEMG,EAAAA,EAAAA,KAAW,GAAD,OAAIC,EAAAA,GAAc,YAAIJ,EAAKK,KAAM,CAChEC,MAAO1B,EAAQK,KACf,kBAFMsB,EAAI,EAAJA,MAIAC,OACNR,EAAKS,kBAAmB,EACxBT,EAAKU,YAAcH,EAAKD,MACxBZ,aAAaiB,QAAQ,gBAAiBb,KAAKc,UAAUZ,IACrDvB,EAAS,OAGToB,EAAAA,EAAAA,IAAM,yCAA0CV,GACjD,4CAEJ,kBAvBsB,mCA6CvB,OApBAM,EAAAA,EAAAA,YAAU,WACR,IAAMoB,EAAW,yCAAG,+FACZN,EAAO,GAEJO,EAAI,EAAE,KAAD,OAAEA,EAAI,GAAC,iCACCX,EAAAA,EAAAA,IAAU,GAAD,OAxDhB,8BAyDE,YAAIY,KAAKC,MAAsB,IAAhBD,KAAKE,YACjC,KAAD,EAFKX,EAAK,OAILY,EAAS,IAAIC,EAAAA,GAAOb,EAAMC,MAChCA,EAAKa,KAAKF,EAAOG,SAAS,WAAW,OANhBP,IAAG,uBAS1BjC,EAAW0B,GACXxB,GAAa,GAAO,4CACrB,kBAdgB,mCAgBjB8B,GACF,GAAG,KAGD,gCACG/B,GACC,SAACP,EAAe,WACd,gBAAK+C,UAAU,SAAQ,UACrB,iBAAKA,UAAU,YAAW,WACxB,iBAAMA,UAAU,SAChB,iBAAMA,UAAU,SAChB,iBAAMA,UAAU,WAChB,iBAAMA,UAAU,iBAKtB,UAAC/C,EAAe,YACd,gBAAK+C,UAAU,kBAAiB,UAC9B,sEAEF,gBAAKA,UAAU,UAAS,SACrB1C,EAAQ2C,KAAI,SAACC,EAAQC,GACpB,OACE,gBAEEH,UAAS,iBACPrC,IAAmBwC,EAAQ,WAAa,IACvC,UAEH,gBACEC,IAAG,oCAA+BF,GAClCG,IAAI,SACJC,QAAS,WACP1C,EAAkBuC,EACpB,KAVGA,EAcX,OAEF,oBAAQH,UAAU,YAAYM,QAAShC,EAAkB,UACtD,IAAG,gCAKV,SAAC,KAAc,MAGrB,C,wMCjIO,IAAMiC,EAAO,wBAGPC,EAAa,UAAMD,EAAI,iBAEvBE,EAAU,UAAMF,EAAI,cAEpBzB,EAAc,UAAMyB,EAAI,kBAExBG,EAAa,UAAMH,EAAI,iBAEvBI,EAAgB,UAAMJ,EAAI,mBAE1BK,EAAkB,UAAML,EAAI,qB","sources":["Pages/SetAvatar.jsx","Utils/APIRoutes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n// import loader from \"../assets/loading.png\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport { setAvatarRoute } from \"../Utils/APIRoutes\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst SetAvatar = () => {\r\n  const Avatar_api = \"https://api.multiavatar.com\";\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [avatars, setavatars] = useState([]);\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [selectedAvatar, setselectedAvatar] = useState(undefined);\r\n    \r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 5000,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"dark\",\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    if(!localStorage.getItem(\"chat-app-user\")){\r\n      navigate(\"/login\");\r\n    }\r\n    \r\n  }, [])\r\n  \r\n\r\n  const setProfilePicture = async () => {\r\n    if (selectedAvatar === undefined) {\r\n      toast.error(\"Please select an avatar\", toastOptions);\r\n    }\r\n    else{\r\n      const user = await JSON.parse(localStorage.getItem(\"chat-app-user\"));\r\n\r\n      console.log(user)\r\n\r\n      const { data } = await axios.post(`${setAvatarRoute}/${user._id}`,{\r\n        image: avatars[selectedAvatar]\r\n      })\r\n      \r\n      if(data.isSet){\r\n        user.isAvatarImageSet = true;\r\n        user.avatarImage = data.image;\r\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(user));\r\n        navigate(\"/\")\r\n      }\r\n      else{\r\n        toast(\"Error setting avatar, Please try again\", toastOptions);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const avatar_data = async () => {\r\n      const data = [];\r\n\r\n      for (let i = 0; i < 4; i++) {\r\n        const image = await axios.get(\r\n          `${Avatar_api}/${Math.round(Math.random() * 10000)}`\r\n        );\r\n\r\n        const buffer = new Buffer(image.data);\r\n        data.push(buffer.toString(\"base64\"));\r\n      }\r\n\r\n      setavatars(data);\r\n      setisLoading(false);\r\n    };\r\n\r\n    avatar_data();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <AvatarContainer>\r\n          <div className=\"loader\">\r\n            <div className=\"container\">\r\n              <span className=\"one\"></span>\r\n              <span className=\"two\"></span>\r\n              <span className=\"three\"></span>\r\n              <span className=\"four\"></span>\r\n            </div>\r\n          </div>\r\n        </AvatarContainer>\r\n      ) : (\r\n        <AvatarContainer>\r\n          <div className=\"title_container\">\r\n            <h1>Pick an avatar as your Profile picture</h1>\r\n          </div>\r\n          <div className=\"avatars\">\r\n            {avatars.map((avatar, index) => {\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className={`avatar ${\r\n                    selectedAvatar === index ? \"selected\" : \"\"\r\n                  }`}\r\n                >\r\n                  <img\r\n                    src={`data:image/svg+xml;base64,${avatar}`}\r\n                    alt=\"avatar\"\r\n                    onClick={() => {\r\n                      setselectedAvatar(index);\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button className=\"submitbtn\" onClick={setProfilePicture}>\r\n            {\" \"}\r\n            Set as Profile Picture\r\n          </button>\r\n        </AvatarContainer>\r\n      )}\r\n      <ToastContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nconst AvatarContainer = styled.div`\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 3rem;\r\n    background-color: #131324;\r\n    height: 100vh;\r\n    width: 100vw;\r\n\r\n    .loader{\r\n        background: #012;\r\n        height: 100vh;\r\n        width: 100vw;\r\n        display: grid;\r\n        place-items: center;\r\n\r\n        .container {\r\n            position: relative;\r\n            width: 200px;\r\n            height: 200px;\r\n          }\r\n          span {\r\n            position: absolute;\r\n            display: block;\r\n            width: 40%;\r\n            height: 40%;\r\n            border-radius: 50%;\r\n            animation: speed 2s infinite ease-in-out;\r\n          }\r\n          .one {\r\n            background: #4285f4;\r\n            animation-delay: 1.5s;\r\n          }\r\n          .two {\r\n            background: #ea4335;\r\n            animation-delay: 1s;\r\n          }\r\n          .three {\r\n            background: #fbbc05;\r\n            animation-delay: 0.5s;\r\n          }\r\n          .four {\r\n            background: #34a853;\r\n          }\r\n          @keyframes speed {\r\n            0% {\r\n              transform: translate(0%);\r\n              border-radius: 50%;\r\n            }\r\n            25% {\r\n              transform: translate(150%) scale(0.5);\r\n              border-radius: 0%;\r\n            }\r\n            50% {\r\n              transform: translate(150%, 150%);\r\n              border-radius: 50%;\r\n            }\r\n            75% {\r\n              transform: translate(0, 150%) scale(0.5);\r\n              border-radius: 0%;\r\n            }\r\n          }\r\n          \r\n    }\r\n\r\n\r\n    .title_container{\r\n        h1{\r\n            color: white;\r\n        }\r\n    }\r\n\r\n    .avatars{\r\n        display: flex;\r\n        gap: 2rem;\r\n\r\n        .avatar{\r\n            border: 0.5rem solid transparent;\r\n            padding: 0.5rem;\r\n            border-radius: 5rem;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            transition: 0.3s ease-in-out;\r\n            img{\r\n                height: 6rem;\r\n            }\r\n        }\r\n        .avatar:hover{\r\n            transform scale(1.2);\r\n        }\r\n\r\n        .selected{\r\n            border: 0.5rem solid #4e0eff;\r\n        }\r\n    }\r\n\r\n    .submitbtn{\r\n        background-color: #997af0;\r\n        color: white;\r\n        padding: 1rem 2rem;\r\n        border: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n        border-radius: 0.4rem;\r\n        font-size: 1rem;\r\n        text-transform: uppercase;\r\n        transition: 0.5s ease-in-out;\r\n        &:hover{\r\n          background-color: #4e3eff;\r\n        }\r\n      }\r\n\r\n\r\n`;\r\n\r\nexport default SetAvatar;\r\n","export const host = \"http://localhost:5000\";\r\n// export const host = \"https://chatapi-production.up.railway.app\";\r\n\r\nexport const registerRoute = `${host}/api/register`;\r\n\r\nexport const loginRoute = `${host}/api/login`;\r\n\r\nexport const setAvatarRoute = `${host}/api/setavatar`;\r\n\r\nexport const allUsersRoute = `${host}/api/allusers`;\r\n\r\nexport const sendMessageRoute = `${host}/message/addmsg`;\r\n\r\nexport const getAllMessageRoute = `${host}/message/getallmsg`;\r\n"],"names":["AvatarContainer","styled","navigate","useNavigate","useState","avatars","setavatars","isLoading","setisLoading","undefined","selectedAvatar","setselectedAvatar","toastOptions","position","autoClose","pauseOnHover","draggable","theme","useEffect","localStorage","getItem","setProfilePicture","toast","JSON","parse","user","console","log","axios","setAvatarRoute","_id","image","data","isSet","isAvatarImageSet","avatarImage","setItem","stringify","avatar_data","i","Math","round","random","buffer","Buffer","push","toString","className","map","avatar","index","src","alt","onClick","host","registerRoute","loginRoute","allUsersRoute","sendMessageRoute","getAllMessageRoute"],"sourceRoot":""}